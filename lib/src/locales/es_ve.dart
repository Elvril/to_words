import '../interfaces/locale.dart';
import '../models/currency_options.dart';
import '../models/locale_config.dart';
import '../models/number_word_map.dart';

class LocaleEsVe implements Locale {
  @override
  final LocaleConfig config = const LocaleConfig(
    currency: CurrencyOptions(
      name: 'Bolivar',
      plural: 'Bolivares',
      singular: 'Bolivar',
      symbol: '',
      fractionalUnit: FractionalUnit(
        name: 'Centimo',
        plural: 'Centimos',
        singular: 'Centimo',
        symbol: '',
      ),
    ),
    texts: LocaleTexts(
      and: 'Con',
      minus: 'Menos',
      only: '',
      point: 'Coma',
    ),
    numberWordsMapping: [
      NumberWordMap(number: 1000000000000000, value: 'Trillon'),
      NumberWordMap(number: 1000000000000, value: 'Billon'),
      NumberWordMap(number: 1000000, value: 'Millon'),
      NumberWordMap(number: 1000, value: 'Mil'),
      NumberWordMap(number: 900, value: 'Novecientos'),
      NumberWordMap(number: 800, value: 'Ochocientos'),
      NumberWordMap(number: 700, value: 'Setecientos'),
      NumberWordMap(number: 600, value: 'Seiscientos'),
      NumberWordMap(number: 500, value: 'Quinientos'),
      NumberWordMap(number: 400, value: 'Cuatrocientos'),
      NumberWordMap(number: 300, value: 'Trescientos'),
      NumberWordMap(number: 200, value: 'Doscientos'),
      NumberWordMap(number: 100, value: 'Ciento'),
      NumberWordMap(number: 90, value: 'Noventa Y'),
      NumberWordMap(number: 80, value: 'Ochenta Y'),
      NumberWordMap(number: 70, value: 'Setenta Y'),
      NumberWordMap(number: 60, value: 'Sesenta Y'),
      NumberWordMap(number: 50, value: 'Cincuenta Y'),
      NumberWordMap(number: 40, value: 'Cuarenta Y'),
      NumberWordMap(number: 30, value: 'Treinta Y'),
      NumberWordMap(number: 29, value: 'Veintinueve'),
      NumberWordMap(number: 28, value: 'Veintiocho'),
      NumberWordMap(number: 27, value: 'Veintisiete'),
      NumberWordMap(number: 26, value: 'Veintiseis'),
      NumberWordMap(number: 25, value: 'Veinticinco'),
      NumberWordMap(number: 24, value: 'Veinticuatro'),
      NumberWordMap(number: 23, value: 'Veintitr√©s'),
      NumberWordMap(number: 22, value: 'Veintidos'),
      NumberWordMap(number: 21, value: 'Veintiuno'),
      NumberWordMap(number: 20, value: 'Veinte'),
      NumberWordMap(number: 19, value: 'Diecinueve'),
      NumberWordMap(number: 18, value: 'Dieciocho'),
      NumberWordMap(number: 17, value: 'Dieciciete'),
      NumberWordMap(number: 16, value: 'Dieciseis'),
      NumberWordMap(number: 15, value: 'Quince'),
      NumberWordMap(number: 14, value: 'Catorce'),
      NumberWordMap(number: 13, value: 'Trece'),
      NumberWordMap(number: 12, value: 'Doce'),
      NumberWordMap(number: 11, value: 'Once'),
      NumberWordMap(number: 10, value: 'Diez'),
      NumberWordMap(number: 9, value: 'Nueve'),
      NumberWordMap(number: 8, value: 'Ocho'),
      NumberWordMap(number: 7, value: 'Siete'),
      NumberWordMap(number: 6, value: 'Seis'),
      NumberWordMap(number: 5, value: 'Cinco'),
      NumberWordMap(number: 4, value: 'Cuatro'),
      NumberWordMap(number: 3, value: 'Tres'),
      NumberWordMap(number: 2, value: 'Dos'),
      NumberWordMap(number: 1, value: 'Uno'),
      NumberWordMap(number: 0, value: 'Cero'),
    ],
    ignoreOneForWords: [
      'Cien',
      'Ciento',
      'Doscientos',
      'Trescientos',
      'Cuatrocientos',
      'Quinientos',
      'Seiscientos',
      'Setecientos',
      'Ochocientos',
      'Novecientos',
      'Mil',
    ],
    pluralMark: 'es',
    pluralWords: ['Millon', 'Billon', 'Trillon'],
    exactWordsMapping: [
      NumberWordMap(number: 100, value: 'Cien'),
      NumberWordMap(number: 90, value: 'Noventa'),
      NumberWordMap(number: 80, value: 'Ochenta'),
      NumberWordMap(number: 70, value: 'Setenta'),
      NumberWordMap(number: 60, value: 'Sesenta'),
      NumberWordMap(number: 50, value: 'Cincuenta'),
      NumberWordMap(number: 40, value: 'Cuarenta'),
      NumberWordMap(number: 30, value: 'Treinta'),
      NumberWordMap(number: 1, value: ['Un', 'Uno']),
    ],
  );
}
